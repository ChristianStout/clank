program    =  { SOI ~ top_level* ~ EOI }
top_level  =  {
    func
  | struct
  | const
}
func       =  { "fn " ~ id ~ "(" ~ params? ~ ")" ~ "->" ~ type ~ block }
params     =  { id ~ ":" ~ type ~ ("," ~ id ~ ":" ~ type)* }
struct     =  { "struct " ~ id ~ "{" ~ structbd? ~ "}" }
structbd   =  { id ~ ":" ~ type ~ ("," ~ id ~ ":" ~ type)* ~ ","? }
const      =  { "const " ~ id ~ ":" ~ type ~ "=" ~ expr ~ ";" }
type       =  { "i32" | "u8" | "char" | "bool" | "string" | id }
alpha      =  { 'a'..'z' | 'A'..'Z' | "_" }
digit      =  { '0'..'9' }
block      =  { "{" ~ stmt* ~ "}" }
stmt       = _{
    expr_stmt
  | ret_stmt
}
expr_stmt  =  { expr ~ ";" }
ret_stmt   =  { "return " ~ expr ~ ";" }
expr       =  {
    binary_e
  | unary_e
  | terminal_e
}
binary_e   =  {
    terminal_e ~ "+" ~ expr
  | terminal_e ~ "-" ~ expr
  | terminal_e ~ "*" ~ expr
  | terminal_e ~ "/" ~ expr
  | terminal_e ~ "%" ~ expr
  | terminal_e ~ "+=" ~ expr
  | terminal_e ~ "-=" ~ expr
  | terminal_e ~ "*=" ~ expr
  | terminal_e ~ "/=" ~ expr
  | terminal_e ~ "%=" ~ expr
  | terminal_e ~ "==" ~ expr
  | terminal_e ~ "!=" ~ expr
  | terminal_e ~ ">" ~ expr
  | terminal_e ~ "<" ~ expr
  | terminal_e ~ ">=" ~ expr
  | terminal_e ~ "<=" ~ expr
  | terminal_e ~ "=" ~ expr
}
unary_e    =  {
      "+" ~ expr
    | "-" ~ expr
    | "!" ~ expr
}
terminal_e = _{
    string
  | char
  | id
  | num
}
id         = @{ alpha ~ (alpha | digit)* }
num        = @{ digit+ }
string     = ${ "\"" ~ inner ~ "\"" }
inner      = @{ inner_char* }
char       = ${ "'" ~ inner_char ~ "'" }
inner_char =  {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
WHITESPACE = _{ (" " | "\t" | "\r" | "\n") }
COMMENT    = _{ ("//" ~ ^"\n"* ~ "\n") | ("/*" ~ ANY* ~ "*/") }
// field = { (ASCII_DIGIT | "." | "-")+ }
// record = { field ~ ("," ~ field)* }
// file = { SOI ~ (record ~ ("\r\n" | "\n"))* ~ EOI }
